{"name":"AngularHammer","tagline":"Hammer.js support for AngularJS","body":"# Angular Hammer v2\r\n\r\nAn [Angular.js](https://angularjs.org/) module that enables you to bind custom behavior to [Hammer.js](http://hammerjs.github.io/) touch events. It was derived from the [Angular Hammer](https://github.com/monospaced/angular-hammer) project by [Monospaced](https://github.com/monospaced).\r\n\r\n## Installation \r\n\r\nInstall using the [Bower](http://bower.io/) package manager.\r\n\r\n```bash\r\n$ bower install RyanMullins/AngularHammer\r\n```\r\n\r\nAdd `hmTouchEvents` to your app or module's dependencies. This module is designed to work with Angular.js v1.2.0+, and Hammer.js v2.0.0+. \r\n\r\n## Usage\r\n\r\nThe `hmTouchEvents` module provides a series of attribute [directives](https://docs.angularjs.org/guide/directive) for hooking into the standard Hammer.js events. The following list shows the Hammer event and corresponding Angular directive (format: &lt;eventName&gt; : &lt;directiveName&gt;). Events on the top level are fired every time a gesture of that class happens. The second-level events are more specific to the gesture state, but that interaction also triggers a top level event. \r\n\r\n* pan : hmPan\r\n    - panstart : hmPanStart\r\n    - panmove : hmPanMove\r\n    - panend : hmPanEnd\r\n    - pancancel : hmPanCancel\r\n    - panleft : hmPanLeft\r\n    - panright : hmPanRight\r\n    - panup : hmPanUp\r\n    - pandown : hmPanDown\r\n* pinch : hmPinch\r\n    - pinchstart : hmPinchStart\r\n    - pinchmove : hmPinchMove\r\n    - pinchend : hmPinchEnd\r\n    - pinchcancel : hmPinchCancel\r\n    - pinchin : hmPinchIn\r\n    - pinchout : hmPinchOut\r\n* press : hmPress\r\n* rotate : hmRotate\r\n    - rotatestart : hmRoatetStart\r\n    - rotatemove : hmRotateMove\r\n    - rotateend : hmRotateEnd\r\n    - rotatecancel : hmRotateCancel\r\n* swipe : hmSwipe\r\n    - swipeleft : hmSwipeLeft\r\n    - swiperight : hmSwipeRight\r\n    - swipeup : hmSwipeUp\r\n    - swipedown : hmSwipeDown\r\n* tap : hmTap\r\n* doubletap : hmDoubleTap \r\n\r\nBehaviors to be executed on an event are defined as values of the attribute. The directives first try to resolve the value to a function available on the scope; if that function is found the event is passed to it, otherwise the value is parsed as an [Angular expression](https://docs.angularjs.org/guide/expression). Beware, invalid Angular expressions will cause an error. \r\n\r\n```\r\n[data-]hm-tap=\"onHammer\"            // Using a function available in the scope\r\n[data-]hm-tap=\"model.name='Ryan'\"   // Using an Angular expression\r\n```\r\n\r\nYou can set the options of the [manager](http://hammerjs.github.io/api/#hammer.manager) via the `hm-options` attribute. Values for this should be specified as a stringified JSON object with the properties specified in the [Manager defaults](http://hammerjs.github.io/api/#hammer.defaults) documentation.\r\n\r\n```\r\n[data-]hm-options=\"{'touchAction':'auto','domEvents':false}\" \r\n```\r\n\r\n### Custom Gesture Recognizers \r\n\r\nYou can add custom gesture recognizers using the `hmCustom` directive. Custom gestures are defined as a stringified JSON array of objects. Each object must contain three properties: \r\n\r\n* `type`: the base recognizer that you are extending\r\n* `event` : the name of the custom event you are defining\r\n* `val` : the function of expression to be triggered\r\n\r\nThese definitions may also include any of the properties in the [Pan](http://hammerjs.github.io/recognizer-pan), [Pinch](http://hammerjs.github.io/recognizer-pinch), [Press](http://hammerjs.github.io/recognizer-press), [Rotate](http://hammerjs.github.io/recognizer-rotate), [Swipe](http://hammerjs.github.io/recognizer-swipe), or [Tap](http://hammerjs.github.io/recognizer-tap) gesture recognizers. For those recognizers that take a `directions` option, please specify this as a string of the DIRECTION_* values separated by a `|` and containing no spaces. \r\n\r\n```\r\n[data-]hm-custom=\"[{'type':'pan','event':'rightTap','val':'onRightTap','pointers':2,'directions':'DIRECTION_LEFT|DIRECTION_RIGHT'}]\"\r\n```\r\n\r\n## Demo\r\n\r\nComing soon...","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}